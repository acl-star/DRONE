// Code generated by protoc-gen-go. DO NOT EDIT.
// source: worker_service.proto

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	worker_service.proto

It has these top-level messages:
	ShutDownRequest
	ShutDownResponse
	PEvalRequest
	PEvalResponse
	IncEvalRequest
	IncEvalResponse
	AssembleRequest
	AssembleResponse
	SSSPMessageRequest
	SSSPMessageStruct
	SSSPMessageResponse
*/
package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ShutDownRequest struct {
}

func (m *ShutDownRequest) Reset()                    { *m = ShutDownRequest{} }
func (m *ShutDownRequest) String() string            { return proto.CompactTextString(m) }
func (*ShutDownRequest) ProtoMessage()               {}
func (*ShutDownRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ShutDownResponse struct {
	IterationNum int32 `protobuf:"varint,1,opt,name=iterationNum" json:"iterationNum,omitempty"`
}

func (m *ShutDownResponse) Reset()                    { *m = ShutDownResponse{} }
func (m *ShutDownResponse) String() string            { return proto.CompactTextString(m) }
func (*ShutDownResponse) ProtoMessage()               {}
func (*ShutDownResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ShutDownResponse) GetIterationNum() int32 {
	if m != nil {
		return m.IterationNum
	}
	return 0
}

type PEvalRequest struct {
	SubGraphJson  string `protobuf:"bytes,1,opt,name=subGraphJson" json:"subGraphJson,omitempty"`
	PartitionJson string `protobuf:"bytes,2,opt,name=partitionJson" json:"partitionJson,omitempty"`
}

func (m *PEvalRequest) Reset()                    { *m = PEvalRequest{} }
func (m *PEvalRequest) String() string            { return proto.CompactTextString(m) }
func (*PEvalRequest) ProtoMessage()               {}
func (*PEvalRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PEvalRequest) GetSubGraphJson() string {
	if m != nil {
		return m.SubGraphJson
	}
	return ""
}

func (m *PEvalRequest) GetPartitionJson() string {
	if m != nil {
		return m.PartitionJson
	}
	return ""
}

type PEvalResponse struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *PEvalResponse) Reset()                    { *m = PEvalResponse{} }
func (m *PEvalResponse) String() string            { return proto.CompactTextString(m) }
func (*PEvalResponse) ProtoMessage()               {}
func (*PEvalResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PEvalResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type IncEvalRequest struct {
}

func (m *IncEvalRequest) Reset()                    { *m = IncEvalRequest{} }
func (m *IncEvalRequest) String() string            { return proto.CompactTextString(m) }
func (*IncEvalRequest) ProtoMessage()               {}
func (*IncEvalRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type IncEvalResponse struct {
	Update bool `protobuf:"varint,1,opt,name=update" json:"update,omitempty"`
}

func (m *IncEvalResponse) Reset()                    { *m = IncEvalResponse{} }
func (m *IncEvalResponse) String() string            { return proto.CompactTextString(m) }
func (*IncEvalResponse) ProtoMessage()               {}
func (*IncEvalResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *IncEvalResponse) GetUpdate() bool {
	if m != nil {
		return m.Update
	}
	return false
}

type AssembleRequest struct {
}

func (m *AssembleRequest) Reset()                    { *m = AssembleRequest{} }
func (m *AssembleRequest) String() string            { return proto.CompactTextString(m) }
func (*AssembleRequest) ProtoMessage()               {}
func (*AssembleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type AssembleResponse struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *AssembleResponse) Reset()                    { *m = AssembleResponse{} }
func (m *AssembleResponse) String() string            { return proto.CompactTextString(m) }
func (*AssembleResponse) ProtoMessage()               {}
func (*AssembleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AssembleResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type SSSPMessageRequest struct {
	Pair []*SSSPMessageStruct `protobuf:"bytes,1,rep,name=pair" json:"pair,omitempty"`
}

func (m *SSSPMessageRequest) Reset()                    { *m = SSSPMessageRequest{} }
func (m *SSSPMessageRequest) String() string            { return proto.CompactTextString(m) }
func (*SSSPMessageRequest) ProtoMessage()               {}
func (*SSSPMessageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *SSSPMessageRequest) GetPair() []*SSSPMessageStruct {
	if m != nil {
		return m.Pair
	}
	return nil
}

type SSSPMessageStruct struct {
	NodeID   string `protobuf:"bytes,1,opt,name=nodeID" json:"nodeID,omitempty"`
	Distance int64  `protobuf:"varint,2,opt,name=distance" json:"distance,omitempty"`
}

func (m *SSSPMessageStruct) Reset()                    { *m = SSSPMessageStruct{} }
func (m *SSSPMessageStruct) String() string            { return proto.CompactTextString(m) }
func (*SSSPMessageStruct) ProtoMessage()               {}
func (*SSSPMessageStruct) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *SSSPMessageStruct) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

func (m *SSSPMessageStruct) GetDistance() int64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

type SSSPMessageResponse struct {
}

func (m *SSSPMessageResponse) Reset()                    { *m = SSSPMessageResponse{} }
func (m *SSSPMessageResponse) String() string            { return proto.CompactTextString(m) }
func (*SSSPMessageResponse) ProtoMessage()               {}
func (*SSSPMessageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func init() {
	proto.RegisterType((*ShutDownRequest)(nil), "protobuf.shutDownRequest")
	proto.RegisterType((*ShutDownResponse)(nil), "protobuf.shutDownResponse")
	proto.RegisterType((*PEvalRequest)(nil), "protobuf.pEvalRequest")
	proto.RegisterType((*PEvalResponse)(nil), "protobuf.pEvalResponse")
	proto.RegisterType((*IncEvalRequest)(nil), "protobuf.incEvalRequest")
	proto.RegisterType((*IncEvalResponse)(nil), "protobuf.incEvalResponse")
	proto.RegisterType((*AssembleRequest)(nil), "protobuf.assembleRequest")
	proto.RegisterType((*AssembleResponse)(nil), "protobuf.assembleResponse")
	proto.RegisterType((*SSSPMessageRequest)(nil), "protobuf.sSSPMessageRequest")
	proto.RegisterType((*SSSPMessageStruct)(nil), "protobuf.sSSPMessageStruct")
	proto.RegisterType((*SSSPMessageResponse)(nil), "protobuf.sSSPMessageResponse")
}

func init() { proto.RegisterFile("worker_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 454 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x52, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x8d, 0xd3, 0x36, 0x98, 0xa1, 0x1f, 0xe9, 0x02, 0x25, 0x35, 0x10, 0xaa, 0x15, 0x87, 0x72,
	0x20, 0x91, 0x8a, 0xc4, 0x81, 0x13, 0xd0, 0x46, 0x55, 0x91, 0x40, 0x95, 0x7d, 0x80, 0x1b, 0x5a,
	0x3b, 0x8b, 0xb3, 0x4a, 0xb3, 0x6b, 0xf6, 0xa3, 0xfd, 0x8b, 0x3d, 0x72, 0xe3, 0x0a, 0xf9, 0x25,
	0x95, 0xd7, 0xeb, 0xaf, 0x36, 0x3d, 0xd9, 0xf3, 0xe6, 0xbd, 0xb7, 0xb3, 0xf3, 0x16, 0x9e, 0x5c,
	0x09, 0x39, 0xa7, 0xf2, 0xa7, 0xa2, 0xf2, 0x92, 0x25, 0x74, 0x94, 0x49, 0xa1, 0x05, 0xf2, 0xed,
	0x27, 0x36, 0xbf, 0x82, 0xb7, 0x29, 0xd3, 0x33, 0x13, 0x8f, 0x12, 0xb1, 0x18, 0xa7, 0x22, 0x15,
	0xe3, 0xb2, 0x63, 0x2b, 0x5b, 0xd8, 0xbf, 0x42, 0x88, 0x77, 0x61, 0x47, 0xcd, 0x8c, 0x3e, 0x11,
	0x57, 0x3c, 0xa4, 0xbf, 0x0d, 0x55, 0x1a, 0xbf, 0x87, 0x7e, 0x0d, 0xa9, 0x4c, 0x70, 0x45, 0x11,
	0x86, 0x4d, 0xa6, 0xa9, 0x24, 0x9a, 0x09, 0xfe, 0xcd, 0x2c, 0x06, 0xde, 0x81, 0x77, 0xb8, 0x11,
	0xb6, 0x30, 0xfc, 0x03, 0x36, 0xb3, 0xc9, 0x25, 0xb9, 0x70, 0x3e, 0xb9, 0x46, 0x99, 0xf8, 0x54,
	0x92, 0x6c, 0xf6, 0x45, 0x09, 0x6e, 0x35, 0x0f, 0xc3, 0x16, 0x86, 0x5e, 0xc3, 0x56, 0x46, 0xa4,
	0x66, 0xb9, 0x87, 0x25, 0x75, 0x2d, 0xa9, 0x0d, 0xe2, 0x57, 0xb0, 0xe5, 0x9c, 0xdd, 0x38, 0xdb,
	0xd0, 0x15, 0x73, 0x6b, 0xe8, 0x87, 0x5d, 0x31, 0xc7, 0x7d, 0xd8, 0x66, 0x3c, 0x69, 0x1c, 0x8e,
	0xdf, 0xc0, 0x4e, 0x85, 0x38, 0xd1, 0x1e, 0xf4, 0x4c, 0x36, 0x25, 0x9a, 0x3a, 0xa1, 0xab, 0xf2,
	0x15, 0x10, 0xa5, 0xe8, 0x22, 0xbe, 0xa0, 0xa5, 0x1a, 0x43, 0xbf, 0x86, 0xee, 0x39, 0x73, 0x02,
	0x48, 0x45, 0xd1, 0xf9, 0x57, 0xaa, 0x14, 0x49, 0x4b, 0x25, 0x1a, 0xc3, 0x7a, 0x46, 0x98, 0x1c,
	0x78, 0x07, 0x6b, 0x87, 0x8f, 0x8e, 0x9e, 0x8f, 0xca, 0xed, 0x8f, 0x1a, 0xdc, 0x48, 0x4b, 0x93,
	0xe8, 0xd0, 0x12, 0xf1, 0x29, 0xec, 0xde, 0x69, 0xe5, 0xa3, 0x72, 0x31, 0xa5, 0x67, 0x27, 0x6e,
	0x69, 0xae, 0x42, 0x01, 0xf8, 0x53, 0xa6, 0x34, 0xe1, 0x09, 0xb5, 0x9b, 0x5a, 0x0b, 0xab, 0x1a,
	0x3f, 0x85, 0xc7, 0xad, 0x79, 0x8a, 0xb1, 0x8f, 0xfe, 0x76, 0xa1, 0xf7, 0xdd, 0x3e, 0x19, 0x74,
	0x0c, 0x7e, 0xe4, 0x82, 0x45, 0xfb, 0x8d, 0xc9, 0xda, 0xf9, 0x07, 0xc1, 0xaa, 0x56, 0xe1, 0x86,
	0x3b, 0xe8, 0x03, 0x6c, 0x9c, 0xe7, 0x6b, 0x45, 0x7b, 0x35, 0xad, 0x19, 0x7b, 0xf0, 0xec, 0x0e,
	0x5e, 0x69, 0x3f, 0xc2, 0x83, 0xb3, 0x22, 0x14, 0x34, 0xa8, 0x59, 0xed, 0xe4, 0x82, 0xfd, 0x15,
	0x9d, 0xca, 0xe1, 0x18, 0xfc, 0x4f, 0x2e, 0x98, 0xe6, 0x15, 0x6e, 0xe5, 0xd7, 0xbc, 0xc2, 0xed,
	0x1c, 0x71, 0x07, 0x4d, 0x60, 0x3d, 0xa2, 0x7c, 0x8a, 0x5e, 0xac, 0x4c, 0xa7, 0xf4, 0x78, 0x79,
	0x4f, 0xb7, 0xb4, 0xf9, 0xdc, 0xbf, 0xfe, 0x3f, 0xec, 0x5c, 0x2f, 0x87, 0xde, 0x9f, 0xe5, 0xd0,
	0xfb, 0xb7, 0x1c, 0x7a, 0x71, 0xcf, 0x2a, 0xde, 0xdd, 0x04, 0x00, 0x00, 0xff, 0xff, 0x84, 0x6e,
	0x51, 0x53, 0xa4, 0x03, 0x00, 0x00,
}
